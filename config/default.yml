#
# DO NOT EDIT THIS FILE
# Instead, copy default.yml to local.yml first and make your config changes in local.yml.
# Keep in mind that the YAML format does not like tabs as indentation, you have to use spaces.
#

# Every setting that accepts an id needs to be enclosed with double quotes (").
# The reason is that the ids are too big for Node to handle properly as a number.
# Saving it as a string explicitly works around this issue.

discord:
  # The bot's token can found on the bot's application page on discordapp.com/developers/applications/me
  token: your-token-should-be-here
  # Command prefix; in case there is another bot running you can change the prefix of this bot's commands
  command_prefix: "!"
  # Time to wait in seconds before the same command can be executed again
  # (depending on the command this can be saved per user or globally)
  command_cooldown: 60
  # Time for a user to wait in seconds before the next command can be executed
  user_cooldown: 3

#####
# Generally every command can be configured with the command_* properties
# When a deliver_* property is available, you can change the delivery method to:
#  - 'dm' (DM)
#  - 'text' (reply to the same text channel)
#  - 'mention' (mention the mentioned person instead of the author of the message, if available)
#####
modules:
  # Provides general stuff that probably should stay enabled
  general:
    enabled: true
    command_help: help
    deliver_help: dm
    command_source: source
    command_welcome: welcome
    welcome_channel: welcome-channel-id
    command_wiki: wiki

  # Provides stuff for managing the bot
  manage:
    enabled: true
    command_export_ids: exportids

  # Provides raid related stuff
  raids:
    enabled: true
    command_reset_time: reset

  # Provides region assignment related stuff
  region_assignment:
    enabled: true
    command_list_numbers: numbers
    # The channels accepts an array of channel ids, an empty array means that it listens to all channels
    channels: []
    eu:
      enabled: true
      command_assign: eu
      command_remove: -eu
      role: eu-role-id
    na:
      enabled: true
      command_assign: na
      command_remove: -na
      role: na-role-id
    cn:
      enabled: true
      command_assign: cn
      command_remove: -cn
      role: cn-role-id

  # Provides squad managing
  squads:
    enabled: true
    # The channels accepts an array of channel ids, an empty array means that it listens to all channels
    channels: []
    # Roles with permanent access accepts an array of role ids that will always have access to each created squad channel
    # An empty array means that no roles have permanent access
    roles_with_permanent_access: []
    command_request: requestsquad
    command_leader: leader
    command_invite: invite
    command_kick: kick
    command_transfer: transfer
    command_leave: leave
    command_disband: disband
    # The squad channels are placed directly after these channels
    squads_after_textchannel: text-channel-id
    squads_after_voicechannel: voice-channel-id
    # Since each squad has a text and a voice channel, they need to have a unique name
    # {name} is replaced by the actual squad name
    textchannel_template: sq-{name}
    voicechannel_template: Squad {name}
    # The disband timers are minutes
    disband_new_squad_after: 20
    disband_empty_squad_after: 5
    disband_restored_squad_after: 10
    # When the kick or leave command is executed, this is the voice channel where those people are automatically moved to
    kick_users_to_channel: voice-channel-id
    # The squad names are randomly generated from 1 adjective and 1 noun
    squad_names:
      adjectives:
        - asuran
        - charr
        - human
        - norn
        - sylvan
        - northern
        - eastern
        - southern
        - western
        - central
        - lower
        - upper
        - dead
        - mystic
        - ash legion's
        - blood legion's
        - flame legion's
        - iron legion's
        - balthazar's
        - dwayna's
        - grenth's
        - kormir's
        - lyssa's
        - melandru's
        - hunter's
        - lion's
        - wolf's
        - owl's
        - raven's
        - braham's
        - caithe's
        - eir's
        - logan's
        - garm's
        - kasmeer's
        - marjory's
        - rox's
        - rytlock's
        - pyre's
        - snaff's
        - taimi's
        - ventari's
        - zojja's
      nouns:
        - bar
        - commons
        - district
        - headquarters
        - hearth
        - inn
        - plaza
        - room
        - shelter
        - tavern
        - ward
        - ale
        - beer
        - brandy
        - lager
        - mead
        - shandy
        - wine
        - bull
        - bunny
        - chicken
        - cow
        - doe
        - dolyak
        - frog
        - marmox
        - moose
        - ram
        - rat
        - sheep
        - stag

#####
# The permissions are set up in a hierarchical way. If a person is a member of more than 1 group,
# the first matched command in either blacklist or whitelist in a group (top-down) from the list below gets priority.
# This means that if in groupA commandA is listed, and user is part of groupA and wants to execute commandB, it will
# fall back to the next first group (that is not groupA) that the user is also part of, that has commandB either
# whitelisted or blacklisted explicitly. If none has been found, it will fall back to the default group.
#
# Please note that if both blacklist and whitelist are matched, blacklist will take precedence.
#
# To add a new group, just add a new key and fill in the properties.
# Be sure to *not* delete default, as this is the fallback group in case nothing is matched.
# The asterisk can be used as a wildcard.
#####
permissions:
  owner:
    user_ids:
      - owner-id
    role_ids: []
    blacklist: []
    whitelist:
      - "*"
  moderator:
    user_ids: []
    role_ids: []
    blacklist:
      - manage.*
    whitelist:
      # Even though it looks like all commands are whitelisted, it's not.
      # Blacklist takes precedence, the "*" in the whitelist is just a catch all so it doesn't fallback further.
      - "*"

  # The default group is a special case, if nothing has been blacklisted or whitelisted, it will accept all commands.
  default:
    blacklist:
      - manage.*
      - general.welcome
    whitelist: []
